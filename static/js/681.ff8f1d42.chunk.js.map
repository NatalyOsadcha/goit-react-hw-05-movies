{"version":3,"file":"static/js/681.ff8f1d42.chunk.js","mappings":"uQAQA,IAAMA,EAAW,gCACXC,EAAU,mCAEhB,SAASC,IACP,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,IAAWG,MAC/D,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAED,SAASC,EAAkBC,GACzB,OAAOR,MAAM,GAAD,OACPH,EADO,gCACyBC,EADzB,kBAC0CU,EAD1C,yBAEVP,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAED,SAASG,EAAgBC,GACvB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,oBAAmCZ,IAAWG,MAAK,SAAAC,GAC7D,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAED,SAASK,EAAaD,GACpB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,4BAA2CZ,IAAWG,MAChE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAED,SAASM,EAAgBF,GACvB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,4BAA2CZ,IAAWG,MAChE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,C,oHC1Dc,SAASO,IACtB,IAAQH,GAAOI,EAAAA,EAAAA,MAAPJ,GACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAgBF,GAAIT,MAAK,SAAAkB,GAClBA,GAGLF,EAAWE,EAAKC,QACjB,GACF,GAAE,CAACV,KAGF,0BACGM,EAAQK,OAAO,EACfL,EAAQM,KAAI,SAAAC,GAAM,OACjB,qCACWA,EAAOC,QAChB,uBAAID,EAAOE,YAFJF,EAAOC,OADC,MAQxB,C","sources":["api/getMovies.js","components/Reviews.jsx"],"sourcesContent":["export {\n  getTrendingMovie,\n  getMovieByKeyWord,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dd2eacab57962d131eb2537d52aeafc3';\n\nfunction getTrendingMovie() {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction getMovieByKeyWord(search) {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}&include_adult=false`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction getMovieDetails(id) {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction getMovieCast(id) {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction getMovieReviews(id) {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/getMovies';\n\nexport default function Reviews() {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(id).then(data => {\n      if (!data) {\n        return\n      }\n      setReviews(data.results);\n    });\n  }, [id]);\n\n  return (\n    <ul>\n      {reviews.length=0 && (<p>We don't have any reviews for this movie</p>)}\n      {reviews.map(review => (\n        <li key={review.author}>\n          Author: {review.author}\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"names":["BASE_URL","API_KEY","getTrendingMovie","fetch","then","response","ok","Error","status","json","getMovieByKeyWord","search","getMovieDetails","id","getMovieCast","getMovieReviews","Reviews","useParams","useState","reviews","setReviews","useEffect","data","results","length","map","review","author","content"],"sourceRoot":""}