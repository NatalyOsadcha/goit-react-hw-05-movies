{"version":3,"file":"static/js/597.b3d0e0ed.chunk.js","mappings":"uQAQA,IAAMA,EAAW,gCACXC,EAAU,mCAEhB,SAASC,IACP,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,IAAWG,MAC/D,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAED,SAASC,EAAkBC,GACzB,OAAOR,MAAM,GAAD,OACPH,EADO,gCACyBC,EADzB,kBAC0CU,EAD1C,yBAEVP,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAED,SAASG,EAAgBC,GACvB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,oBAAmCZ,IAAWG,MAAK,SAAAC,GAC7D,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAED,SAASK,EAAaD,GACpB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,4BAA2CZ,IAAWG,MAChE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAED,SAASM,EAAgBF,GACvB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,4BAA2CZ,IAAWG,MAChE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,C,oHC1Dc,SAASO,IACtB,IAAQH,GAAOI,EAAAA,EAAAA,MAAPJ,GACR,GAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAaD,GAAIT,MAAK,SAAAkB,GAChBA,GACFF,EAAQE,EAAKH,KAEhB,GACF,GAAE,CAACN,KAEF,wBACGM,EAAKI,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,0BACGF,GACD,gBACEG,IACED,GAAY,0CAAuCA,GAErDE,IAAKJ,EACLK,MAAM,SAER,uCAAeJ,OATRZ,EADD,KAef,C","sources":["api/getMovies.js","components/Cast.jsx"],"sourcesContent":["export {\n  getTrendingMovie,\n  getMovieByKeyWord,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dd2eacab57962d131eb2537d52aeafc3';\n\nfunction getTrendingMovie() {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction getMovieByKeyWord(search) {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}&include_adult=false`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction getMovieDetails(id) {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction getMovieCast(id) {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction getMovieReviews(id) {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'api/getMovies';\n\nexport default function Cast() {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCast(id).then(data => {\n      if (data) {\n        setCast(data.cast);\n      }\n    });\n  }, [id]);\n  return (\n    <ul>\n      {cast.map(({ id, name, character, profile_path }) => (\n        <li key={id}>\n          {name}\n          <img\n            src={\n              profile_path && `https://image.tmdb.org/t/p/w500/${profile_path}`\n            }\n            alt={name}\n            width=\"160\"\n          />\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"names":["BASE_URL","API_KEY","getTrendingMovie","fetch","then","response","ok","Error","status","json","getMovieByKeyWord","search","getMovieDetails","id","getMovieCast","getMovieReviews","Cast","useParams","useState","cast","setCast","useEffect","data","map","name","character","profile_path","src","alt","width"],"sourceRoot":""}