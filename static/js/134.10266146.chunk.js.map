{"version":3,"file":"static/js/134.10266146.chunk.js","mappings":"uQAQA,IAAMA,EAAW,gCACXC,EAAU,mCAEhB,SAASC,IACP,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,IAAWG,MAC/D,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAED,SAASC,EAAkBC,GACzB,OAAOR,MAAM,GAAD,OACPH,EADO,gCACyBC,EADzB,kBAC0CU,EAD1C,yBAEVP,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAED,SAASG,EAAgBC,GACvB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,oBAAmCZ,IAAWG,MAAK,SAAAC,GAC7D,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAED,SAASK,EAAaD,GACpB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,4BAA2CZ,IAAWG,MAChE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAED,SAASM,EAAgBF,GACvB,OAAOV,MAAM,GAAD,OAAIH,EAAJ,iBAAqBa,EAArB,4BAA2CZ,IAAWG,MAChE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,C,4HC1Dc,SAASO,IAAU,IAAD,EAC/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACM,KAAVJ,IAGJb,EAAAA,EAAAA,IAAkBa,GAAOnB,MAAK,YAAkB,IAAfwB,EAAc,EAAdA,QAC3BA,GACFT,EAAUS,EAEb,GACF,GAAE,CAACL,IAaJ,OACE,4BACE,kBAAMM,SAbW,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cAIjBX,EAAgB,CAAEC,MAAOS,EAAKE,SAASC,YAAYC,QAEnDJ,EAAKK,OACN,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,iBACxB,mBAAQD,KAAK,SAAb,wBAEF,wBACGpB,EAAOsB,KAAI,YAAoB,IAAjB3B,EAAgB,EAAhBA,GAAI4B,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAK7B,GAAM8B,MAAO,CAAEC,KAAMnB,GAAlC,SACGgB,KAFI5B,EAMZ,QAIR,C","sources":["api/getMovies.js","pages/Movies.jsx"],"sourcesContent":["export {\n  getTrendingMovie,\n  getMovieByKeyWord,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dd2eacab57962d131eb2537d52aeafc3';\n\nfunction getTrendingMovie() {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction getMovieByKeyWord(search) {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${search}&include_adult=false`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction getMovieDetails(id) {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction getMovieCast(id) {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction getMovieReviews(id) {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieByKeyWord } from 'api/getMovies';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    getMovieByKeyWord(query).then(({ results }) => {\n      if (results) {\n        setMovies(results);\n      }\n    });\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    // if (form.elements.searchMovie.value = '') {\n    //   return setSearchParams({});\n    // } \n    setSearchParams({ query: form.elements.searchMovie.value });\n    \n    form.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"searchMovie\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["BASE_URL","API_KEY","getTrendingMovie","fetch","then","response","ok","Error","status","json","getMovieByKeyWord","search","getMovieDetails","id","getMovieCast","getMovieReviews","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","results","onSubmit","evt","preventDefault","form","currentTarget","elements","searchMovie","value","reset","type","name","map","title","to","state","from"],"sourceRoot":""}